{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component'\nimport { PostService } from './post.service';\n\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'angular';\n\n\tpublic posts: Post[] = [];\n\n\tconstructor(public dialog: MatDialog, public postService: PostService) {\n\n\t}\n\n\tngOnInit() {\n\t\tthis.posts = this.postService.posts;\n\t}\n\n\topenDialog() {\n\t\tconst dialogRef = this.dialog.open(PostDialogComponent, {\n\t\t\twidth: '600px'\n\t\t});\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.postService.save(result.post, result.file);\n\t\t\t}\n\t\t});\n\t}\n}\n","<mat-toolbar color=\"primary\">\n\t<span>Laravel Angular project</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n\t<app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n\t<mat-icon>add</mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\n\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from \"./post.service\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tPostComponent,\n\t\tPostDialogComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tFlexLayoutModule,\n\t\tHttpClientModule,\n\n\t\tMatButtonModule,\n\t\tMatInputModule,\n\t\tMatSelectModule,\n\t\tMatIconModule,\n\t\tMatToolbarModule,\n\t\tMatCardModule,\n\t\tMatDividerModule,\n\t\tMatDialogModule,\n\t\tMatChipsModule,\n\t\tMatBadgeModule\n\t],\n\tproviders: [\n\t\tPostService\n\t],\n\tentryComponents: [\n\t\tPostDialogComponent\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n\tselector: 'app-post-dialog',\n\ttemplateUrl: './post-dialog.component.html',\n\tstyleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n\tpublic fileName: string = '';\n\n\tpublic data = {\n\t\tpost: new Post(\"\", \"\", \"\", \"\", \"\"),\n\t\tfile: null\n\t}\n\n\tconstructor(\n\t\tpublic dialogref: MatDialogRef<PostDialogComponent>\n\t) { }\n\n\tngOnInit(): void {\n\t}\n\n\tfileChanged(event) {\n\t\tthis.fileName = event.target.files[0].name;\n\t\tthis.data.file = event.target.files[0];\n\t}\n\n\tsave() {\n\t\tthis.dialogref.close(this.data);\n\t}\n\n\tcancel() {\n\t\tthis.dialogref.close(null);\n\t}\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\t\t<mat-form-field fxFlex=\"50\">\n\t\t\t<input matInput placeholder=\"Your Name\" [(ngModel)]=\"data.post.name\" />\n\t\t\t<mat-hint>Put your name here.</mat-hint>\n\t\t</mat-form-field>\n\t\t<mat-form-field fxFlex=\"50\">\n\t\t\t<input matInput placeholder=\"Your Email\" [(ngModel)]=\"data.post.email\" />\n\t\t\t<mat-hint>Put your email here.</mat-hint>\n\t\t</mat-form-field>\n\t</div>\n\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\t\t<mat-form-field fxFlex=\"50\">\n\t\t\t<input matInput placeholder=\"Title\" [(ngModel)]=\"data.post.title\" />\n\t\t</mat-form-field>\n\t\t<mat-form-field fxFlex=\"50\">\n\t\t\t<input matInput placeholder=\"Sub-title\" [(ngModel)]=\"data.post.subtitle\" />\n\t\t</mat-form-field>\n\t</div>\n\t<mat-form-field fxFlex=\"100\">\n\t\t<textarea matInput placeholder=\"Give your message here.\" [(ngModel)]=\"data.post.message\"></textarea>\n\t</mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"fileChanged($event)\" #fileinput />\n\n<button mat-stroked-button colour=\"primary\" (click)=\"fileinput.click()\">\n\t<mat-icon>add_a_photo</mat-icon>\n\tAdd a Photo\n</button>\n\n<p *ngIf=\"fileName != ''\">\n\t<strong>File: </strong> {{fileName}}\n\t<mat-icon colour=\"primary\">done</mat-icon>\n</p>\n\n<br /> <br />\n\n<div style=\"text-align: center;\">\n\t<button mat-button color=\"primary\" (click)=\"save()\">Save</button>\n\t<button mat-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType } from \"@angular/common/http\";\nimport { Post } from './post';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PostService {\n\n\tpublic posts: Post[] = [];\n\t//private baseUrl: string = 'http://localhost:8000';\n\tprivate baseUrl: string = '';\n\n\tconstructor(private http: HttpClient) {\n\n\t\tthis.http.get(`${this.baseUrl}/api/`).subscribe((posts: any[]) => {\n\t\t\tposts.map(p => this.posts.push(new Post(\n\t\t\t\tp.name,\n\t\t\t\tp.title,\n\t\t\t\tp.subtitle,\n\t\t\t\tp.email,\n\t\t\t\tp.message,\n\t\t\t\tp.file,\n\t\t\t\tp.id,\n\t\t\t\tp.likes\n\t\t\t)));\n\t\t});\n\t}\n\n\tsave(post: Post, file: File) {\n\t\tconst uploadData = new FormData();\n\t\tuploadData.append('name', post.name);\n\t\tuploadData.append('email', post.email);\n\t\tuploadData.append('title', post.title);\n\t\tuploadData.append('subtitle', post.subtitle);\n\t\tuploadData.append('message', post.message);\n\t\tuploadData.append('file', file, file.name);\n\n\t\tthis.http.post('/api/', uploadData, {\n\t\t\treportProgress: true,\n\t\t\tobserve: 'events'\n\t\t}).subscribe((e: any) => {\n\t\t\tif (e.type == HttpEventType.Response) {\n\t\t\t\tlet p = e.body;\n\t\t\t\tthis.posts.push(new Post(\n\t\t\t\t\tp.name,\n\t\t\t\t\tp.title,\n\t\t\t\t\tp.subtitle,\n\t\t\t\t\tp.email,\n\t\t\t\t\tp.message,\n\t\t\t\t\tp.file,\n\t\t\t\t\tp.id,\n\t\t\t\t\tp.likes\n\t\t\t\t));\n\t\t\t}\n\n\t\t\tif (e.type == HttpEventType.UploadProgress) {\n\t\t\t\tconsole.log(\"Upload Progress.\");\n\t\t\t}\n\t\t});\n\t}\n\n\n\tlike(id: number) {\n\t\tthis.http.get('/api/like/' + id, {\n\t\t\tobserve: 'events'\n\t\t}).subscribe((e: any) => {\n\t\t\tconst idPost = e.body ? e.body.id : null;\n\t\t\tif (idPost) {\n\t\t\t\tconst post = this.posts.find(p => p.id == e.body.id);\n\t\t\t\tpost.likes = e.body.likes;\n\t\t\t}\n\t\t});\n\t}\n\n\tdelete(id: number) {\n\t\tthis.http.delete('/api/' + id, {\n\t\t\tobserve: 'events'\n\t\t}).subscribe((e: any) => {\n\t\t\tconst index = this.posts.findIndex(p => p.id === id);\n\t\t\tif (index != -1) {\n\t\t\t\tthis.posts.splice(index, 1);\n\t\t\t}\n\t\t});\n\t}\n\n}\n","export class Post {\n    constructor(\n        public name: string,\n        public title: string,\n        public subtitle: string,\n        public email: string,\n        public message: string,\n        public file?: string,\n        public id?: number,\n        public likes?: number,\n    ) {\n\n\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Post } from \"../post\";\nimport { PostService } from '../post.service';\n\n@Component({\n\tselector: 'app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n\t@Input() post: Post;\n\n\tconstructor(private postService: PostService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tlike() {\n\t\tthis.postService.like(this.post.id);\n\t}\n\n\tdelete() {\n\t\tthis.postService.delete(this.post.id);\n\t}\n\n}\n","<mat-card fxFlex class=\"card\">\n\t<mat-card-header>\n\t\t<div mat-card-avatar></div>\n\t\t<mat-card-title>{{  post.title }}</mat-card-title>\n\t\t<mat-card-subtitle>{{ post.subtitle }}</mat-card-subtitle>\n\t</mat-card-header>\n\t<img mat-card-image src=\"/storage/{{ post.file }}\" alt=\"Photo of a Shiba Inu\">\n\t<mat-card-content>\n\t\t<p>\n\t\t\t{{ post.message }}\n\t\t</p>\n\t</mat-card-content>\n\t<mat-card-actions>\n\t\t<button mat-button color=\"primary\" (click)=\"like()\"> LIKE</button>\n\t\t<button mat-button color=\"accent\" (click)=\"delete()\">DELETE</button>\n\t\t<mat-icon color=\"warn\" *ngIf=\"post.likes > 0\" [matBadge]=\"post.likes\" matBadgePosition=\"above after\"\n\t\t\tmatBadgeColor=\"warn\" matBadgeOverlap=\"false\">favorite</mat-icon>\n\t</mat-card-actions>\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}